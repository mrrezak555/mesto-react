{"ast":null,"code":"import { data } from \"autoprefixer\";\nclass Api {\n  constructor(option) {\n    this._baseUrl = option.baseUrl;\n    this._headers = option.headers;\n  }\n  rememberId(id) {\n    this.id = id;\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject('Произошла ошибка');\n  }\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  editProfile(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(this._checkResponse);\n  }\n  addNewCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(this._checkResponse);\n  }\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  addLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  removeLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  changeAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: `${data}`\n      })\n    }).then(this._checkResponse);\n  }\n}\nconst api = new Api({\n  baseUrl: 'https://nomoreparties.co/v1/cohort-57',\n  headers: {\n    authorization: '474d22e2-c62e-47b3-b3f1-a0975af088eb',\n    'Content-Type': 'application/json'\n  }\n});\nexport { api };","map":{"version":3,"names":["data","Api","constructor","option","_baseUrl","baseUrl","_headers","headers","rememberId","id","_checkResponse","res","ok","json","Promise","reject","getInitialCards","fetch","then","getUserInfo","editProfile","method","body","JSON","stringify","addNewCard","deleteCard","addLike","removeLike","changeAvatar","avatar","api","authorization"],"sources":["/Users/kirillzuev/Documents/yandex/mesto-react/mesto-react/src/utils/Api.js"],"sourcesContent":["import { data } from \"autoprefixer\";\n\nclass Api {\n  constructor(option) {\n    this._baseUrl = option.baseUrl;\n    this._headers = option.headers\n  }\n\n  rememberId(id) {\n    this.id = id\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject('Произошла ошибка');\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, { headers: this._headers })\n      .then(this._checkResponse)\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, { headers: this._headers })\n      .then(this._checkResponse)\n  }\n\n  editProfile(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data)\n    })\n      .then(this._checkResponse)\n  }\n\n  addNewCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify(data)\n    })\n      .then(this._checkResponse)\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    })\n      .then(this._checkResponse)\n  }\n\n  addLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: \"PUT\",\n      headers: this._headers,\n    })\n      .then(this._checkResponse)\n  }\n\n  removeLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    })\n      .then(this._checkResponse)\n  }\n\n  changeAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: `${data}`\n      })\n    })\n      .then(this._checkResponse)\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: 'https://nomoreparties.co/v1/cohort-57',\n  headers: {\n    authorization: '474d22e2-c62e-47b3-b3f1-a0975af088eb',\n    'Content-Type': 'application/json'\n  }\n});\n\nexport { api };"],"mappings":"AAAA,SAASA,IAAI,QAAQ,cAAc;AAEnC,MAAMC,GAAG,CAAC;EACRC,WAAW,CAACC,MAAM,EAAE;IAClB,IAAI,CAACC,QAAQ,GAAGD,MAAM,CAACE,OAAO;IAC9B,IAAI,CAACC,QAAQ,GAAGH,MAAM,CAACI,OAAO;EAChC;EAEAC,UAAU,CAACC,EAAE,EAAE;IACb,IAAI,CAACA,EAAE,GAAGA,EAAE;EACd;EAEAC,cAAc,CAACC,GAAG,EAAE;IAClB,IAAIA,GAAG,CAACC,EAAE,EAAE;MACV,OAAOD,GAAG,CAACE,IAAI,EAAE;IACnB;IACA,OAAOC,OAAO,CAACC,MAAM,CAAC,kBAAkB,CAAC;EAC3C;EAEAC,eAAe,GAAG;IAChB,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACb,QAAS,QAAO,EAAE;MAAEG,OAAO,EAAE,IAAI,CAACD;IAAS,CAAC,CAAC,CAC/DY,IAAI,CAAC,IAAI,CAACR,cAAc,CAAC;EAC9B;EAEAS,WAAW,GAAG;IACZ,OAAOF,KAAK,CAAE,GAAE,IAAI,CAACb,QAAS,WAAU,EAAE;MAAEG,OAAO,EAAE,IAAI,CAACD;IAAS,CAAC,CAAC,CAClEY,IAAI,CAAC,IAAI,CAACR,cAAc,CAAC;EAC9B;EAEAU,WAAW,CAACpB,IAAI,EAAE;IAChB,OAAOiB,KAAK,CAAE,GAAE,IAAI,CAACb,QAAS,WAAU,EAAE;MACxCiB,MAAM,EAAE,OAAO;MACfd,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBgB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACxB,IAAI;IAC3B,CAAC,CAAC,CACCkB,IAAI,CAAC,IAAI,CAACR,cAAc,CAAC;EAC9B;EAEAe,UAAU,CAACzB,IAAI,EAAE;IACf,OAAOiB,KAAK,CAAE,GAAE,IAAI,CAACb,QAAS,QAAO,EAAE;MACrCiB,MAAM,EAAE,MAAM;MACdd,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBgB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACxB,IAAI;IAC3B,CAAC,CAAC,CACCkB,IAAI,CAAC,IAAI,CAACR,cAAc,CAAC;EAC9B;EAEAgB,UAAU,CAACjB,EAAE,EAAE;IACb,OAAOQ,KAAK,CAAE,GAAE,IAAI,CAACb,QAAS,UAASK,EAAG,EAAC,EAAE;MAC3CY,MAAM,EAAE,QAAQ;MAChBd,OAAO,EAAE,IAAI,CAACD;IAChB,CAAC,CAAC,CACCY,IAAI,CAAC,IAAI,CAACR,cAAc,CAAC;EAC9B;EAEAiB,OAAO,CAAClB,EAAE,EAAE;IACV,OAAOQ,KAAK,CAAE,GAAE,IAAI,CAACb,QAAS,UAASK,EAAG,QAAO,EAAE;MACjDY,MAAM,EAAE,KAAK;MACbd,OAAO,EAAE,IAAI,CAACD;IAChB,CAAC,CAAC,CACCY,IAAI,CAAC,IAAI,CAACR,cAAc,CAAC;EAC9B;EAEAkB,UAAU,CAACnB,EAAE,EAAE;IACb,OAAOQ,KAAK,CAAE,GAAE,IAAI,CAACb,QAAS,UAASK,EAAG,QAAO,EAAE;MACjDY,MAAM,EAAE,QAAQ;MAChBd,OAAO,EAAE,IAAI,CAACD;IAChB,CAAC,CAAC,CACCY,IAAI,CAAC,IAAI,CAACR,cAAc,CAAC;EAC9B;EAEAmB,YAAY,CAAC7B,IAAI,EAAE;IACjB,OAAOiB,KAAK,CAAE,GAAE,IAAI,CAACb,QAAS,kBAAiB,EAAE;MAC/CiB,MAAM,EAAE,OAAO;MACfd,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBgB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBM,MAAM,EAAG,GAAE9B,IAAK;MAClB,CAAC;IACH,CAAC,CAAC,CACCkB,IAAI,CAAC,IAAI,CAACR,cAAc,CAAC;EAC9B;AAEF;AAEA,MAAMqB,GAAG,GAAG,IAAI9B,GAAG,CAAC;EAClBI,OAAO,EAAE,uCAAuC;EAChDE,OAAO,EAAE;IACPyB,aAAa,EAAE,sCAAsC;IACrD,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,SAASD,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}