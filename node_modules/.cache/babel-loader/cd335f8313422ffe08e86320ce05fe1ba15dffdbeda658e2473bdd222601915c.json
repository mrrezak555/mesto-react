{"ast":null,"code":"import { data } from \"autoprefixer\";\nclass Api {\n  constructor(option) {\n    this._baseUrl = option.baseUrl;\n    this._headers = option.headers;\n  }\n  rememberId(id) {\n    this.id = id;\n  }\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject('Произошла ошибка');\n    });\n  }\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject('Произошла ошибка');\n    });\n  }\n  editProfile(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject('Произошла ошибка');\n    });\n  }\n  addNewCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject('Произошла ошибка');\n    });\n  }\n  deleteCard() {\n    return fetch(`${this._baseUrl}/cards/${this.id}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject('Произошла ошибка');\n    });\n  }\n  addLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject('Произошла ошибка');\n    });\n  }\n  removeLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject('Произошла ошибка');\n    });\n  }\n  changeAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: `${data}`\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject('Произошла ошибка');\n    });\n  }\n}\nconst api = new Api({\n  baseUrl: 'https://nomoreparties.co/v1/cohort-57',\n  headers: {\n    authorization: '474d22e2-c62e-47b3-b3f1-a0975af088eb',\n    'Content-Type': 'application/json'\n  }\n});\nexport default {\n  api\n};","map":{"version":3,"names":["data","Api","constructor","option","_baseUrl","baseUrl","_headers","headers","rememberId","id","getInitialCards","fetch","then","res","ok","json","Promise","reject","getUserInfo","editProfile","method","body","JSON","stringify","addNewCard","deleteCard","addLike","removeLike","changeAvatar","avatar","api","authorization"],"sources":["/Users/kirillzuev/Documents/yandex/mesto-react/mesto-react/src/utils/Api.js"],"sourcesContent":["import { data } from \"autoprefixer\";\n\nclass Api {\n  constructor(option) {\n    this._baseUrl = option.baseUrl;\n    this._headers = option.headers\n  }\n\n  rememberId(id){\n    this.id = id\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, { headers: this._headers })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject('Произошла ошибка')\n      })\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, { headers: this._headers })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject('Произошла ошибка')\n      });\n  }\n\n  editProfile(data){\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data)\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject('Произошла ошибка')\n      });\n  }\n\n  addNewCard(data){\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify(data)\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject('Произошла ошибка')\n      });\n  }\n\n  deleteCard(){\n    return fetch(`${this._baseUrl}/cards/${this.id}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject('Произошла ошибка')\n      });\n  }\n\n  addLike(id){\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: \"PUT\",\n      headers: this._headers,\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject('Произошла ошибка')\n      });\n  }\n\n  removeLike(id){\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject('Произошла ошибка')\n      });\n  }\n\n  changeAvatar(data){\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: `${data}`\n      })\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject('Произошла ошибка')\n      });\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: 'https://nomoreparties.co/v1/cohort-57',\n  headers: {\n    authorization: '474d22e2-c62e-47b3-b3f1-a0975af088eb',\n    'Content-Type': 'application/json'\n  }\n});\n\nexport default { api };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}